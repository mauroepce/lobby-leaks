/* tslint:disable */
/* eslint-disable */
/**
 * LobbyLeaks RPC API
 * Endpoint JSON‑RPC 2.0 (`/rpc2`) con cuatro acciones stub que devuelven 501 mientras el MVP está en desarrollo. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Error400,
  Error501,
  JSONRPCRequest,
} from '../models/index';
import {
    Error400FromJSON,
    Error400ToJSON,
    Error501FromJSON,
    Error501ToJSON,
    JSONRPCRequestFromJSON,
    JSONRPCRequestToJSON,
} from '../models/index';

export interface Rpc2JsonRpcRequest {
    jSONRPCRequest: JSONRPCRequest;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Envia un objeto JSON‑RPC 2.0 con `method` en {fetch_pdf, ocr_pdf, summarise_doc, entity_link}. Parámetro opcional `jurisdiction` (ISO 3166‑1 alpha‑2), por defecto `\"CL\"`. 
     * JSON‑RPC over HTTP
     */
    async rpc2JsonRpcRaw(requestParameters: Rpc2JsonRpcRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['jSONRPCRequest'] == null) {
            throw new runtime.RequiredError(
                'jSONRPCRequest',
                'Required parameter "jSONRPCRequest" was null or undefined when calling rpc2JsonRpc().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/rpc2`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: JSONRPCRequestToJSON(requestParameters['jSONRPCRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Envia un objeto JSON‑RPC 2.0 con `method` en {fetch_pdf, ocr_pdf, summarise_doc, entity_link}. Parámetro opcional `jurisdiction` (ISO 3166‑1 alpha‑2), por defecto `\"CL\"`. 
     * JSON‑RPC over HTTP
     */
    async rpc2JsonRpc(requestParameters: Rpc2JsonRpcRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.rpc2JsonRpcRaw(requestParameters, initOverrides);
    }

}
