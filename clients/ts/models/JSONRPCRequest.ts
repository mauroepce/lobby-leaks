/* tslint:disable */
/* eslint-disable */
/**
 * LobbyLeaks RPC API
 * Endpoint JSON‑RPC 2.0 (`/rpc2`) con cuatro acciones stub que devuelven 501 mientras el MVP está en desarrollo. 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JSONRPCRequestParams } from './JSONRPCRequestParams';
import {
    JSONRPCRequestParamsFromJSON,
    JSONRPCRequestParamsFromJSONTyped,
    JSONRPCRequestParamsToJSON,
    JSONRPCRequestParamsToJSONTyped,
} from './JSONRPCRequestParams';
import type { JSONRPCRequestId } from './JSONRPCRequestId';
import {
    JSONRPCRequestIdFromJSON,
    JSONRPCRequestIdFromJSONTyped,
    JSONRPCRequestIdToJSON,
    JSONRPCRequestIdToJSONTyped,
} from './JSONRPCRequestId';

/**
 * 
 * @export
 * @interface JSONRPCRequest
 */
export interface JSONRPCRequest {
    /**
     * 
     * @type {string}
     * @memberof JSONRPCRequest
     */
    jsonrpc: JSONRPCRequestJsonrpcEnum;
    /**
     * 
     * @type {JSONRPCRequestId}
     * @memberof JSONRPCRequest
     */
    id: JSONRPCRequestId;
    /**
     * 
     * @type {string}
     * @memberof JSONRPCRequest
     */
    method: JSONRPCRequestMethodEnum;
    /**
     * 
     * @type {JSONRPCRequestParams}
     * @memberof JSONRPCRequest
     */
    params: JSONRPCRequestParams;
}


/**
 * @export
 */
export const JSONRPCRequestJsonrpcEnum = {
    _20: '2.0'
} as const;
export type JSONRPCRequestJsonrpcEnum = typeof JSONRPCRequestJsonrpcEnum[keyof typeof JSONRPCRequestJsonrpcEnum];

/**
 * @export
 */
export const JSONRPCRequestMethodEnum = {
    FetchPdf: 'fetch_pdf',
    OcrPdf: 'ocr_pdf',
    SummariseDoc: 'summarise_doc',
    EntityLink: 'entity_link'
} as const;
export type JSONRPCRequestMethodEnum = typeof JSONRPCRequestMethodEnum[keyof typeof JSONRPCRequestMethodEnum];


/**
 * Check if a given object implements the JSONRPCRequest interface.
 */
export function instanceOfJSONRPCRequest(value: object): value is JSONRPCRequest {
    if (!('jsonrpc' in value) || value['jsonrpc'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('method' in value) || value['method'] === undefined) return false;
    if (!('params' in value) || value['params'] === undefined) return false;
    return true;
}

export function JSONRPCRequestFromJSON(json: any): JSONRPCRequest {
    return JSONRPCRequestFromJSONTyped(json, false);
}

export function JSONRPCRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): JSONRPCRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'jsonrpc': json['jsonrpc'],
        'id': JSONRPCRequestIdFromJSON(json['id']),
        'method': json['method'],
        'params': JSONRPCRequestParamsFromJSON(json['params']),
    };
}

export function JSONRPCRequestToJSON(json: any): JSONRPCRequest {
    return JSONRPCRequestToJSONTyped(json, false);
}

export function JSONRPCRequestToJSONTyped(value?: JSONRPCRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'jsonrpc': value['jsonrpc'],
        'id': JSONRPCRequestIdToJSON(value['id']),
        'method': value['method'],
        'params': JSONRPCRequestParamsToJSON(value['params']),
    };
}

