name: CI
on: [pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pnpm install --frozen-lockfile
      - run: pip install -r requirements.txt
      - name: Run linter
        run: make lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pnpm install --frozen-lockfile
      - run: pip install -r requirements.txt
      - name: Run main tests
        run: make test
      - name: Install template dependencies
        run: pip install -r services/_template/requirements.txt
      - name: Run template unit tests
        run: make template-test-unit

  build-template:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build template Docker image
        run: docker build -t lobbyleaks-template services/_template
      - name: Test Docker image runs
        run: docker run --rm lobbyleaks-template --help

  mcp-e2e:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: lobbyleaks
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: lobbyleaks
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U lobbyleaks"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://lobbyleaks:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/lobbyleaks
      DIRECT_URL:   postgresql://lobbyleaks:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/lobbyleaks

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Py deps mínimas para ejecutar pytest del host
      - name: Install test deps
        run: pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 -U lobbyleaks; do
            echo "Esperando a Postgres…"
            sleep 1
          done

      - name: Run MCP e2e via Makefile
        run: make mcp-test-e2e

      - name: Teardown (best-effort)
        if: always()
        run: make mcp-stop


  openapi:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4 
        with:
          version: 9
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - run: pnpm exec redocly lint --config redocly.yaml docs/openapi.yaml
      - run: |
          pnpm run gen-sdk
          git diff --exit-code

  rls-tests:
    name: RLS security smoke tests
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: lobbyleaks
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: lobbyleaks
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U lobbyleaks"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DATABASE_URL: postgresql://lobbyleaks:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/lobbyleaks
      DIRECT_URL:   postgresql://lobbyleaks:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/lobbyleaks

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python deps
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install -r requirements.txt

      - name: Install Postgres client (for pg_isready)
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432 -U lobbyleaks; do
            echo "Esperando a Postgres…"
            sleep 1
          done
        shell: bash

      - name: Apply migrations
        run: npx prisma migrate deploy --schema=prisma/schema.prisma
        shell: bash

      - name: Seed leaks
        run: npx prisma db execute --file scripts/seed.sql --schema=prisma/schema.prisma

      - name: Run RLS tests
        run: make test-rls